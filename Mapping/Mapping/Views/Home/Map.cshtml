@model Mapping.Models.MapLocationModel

@{
    ViewBag.Title = "Map";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p></p>


@Html.Partial("_LocationForm")

<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>

<div id="map_canvas" style="height: 600px;"></div>

@section scripts {
    <section class="scripts">

        <script type="text/javascript">

            var gm = google.maps;
            var map = null;
            var oms = null;

            $(document).ready(function () {
                Initialize();
            });

        function Initialize() {

            // Google has tweaked their interface somewhat - this tells the api to use that new UI
            gm.visualRefresh = true;

            var AustraliaCentre = new gm.LatLng(-24.303423, 134.130571);

            // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
            var mapOptions = {
                zoom: 4,
                center: AustraliaCentre,
                mapTypeId: gm.MapTypeId.G_NORMAL_MAP
            };

            // This makes the div with id "map_canvas" a google map
            map = new gm.Map(document.getElementById("map_canvas"), mapOptions);
            oms = new OverlappingMarkerSpiderfier(map);

            // a list of JSON encoded data of places
            var data = @Html.Raw(Model.mapLocationsJson)

            // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
            $.each(data, function (i, item) {

                var marker = new gm.Marker({
                    'position': new gm.LatLng(item.LatLng.Latitude, item.LatLng.Longitude),
                    'map': map,
                    'title': item.PlaceName,
                    'icon': 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'
                });

                //// put in some information about each json object - in this case, the opening hours.
                var infowindow = new gm.InfoWindow({
                    content: "<div class='infoDiv'><h2>" + item.PlaceName + "</h2><a href='http://www.google.com'>fish</a></div>"
                });


                ////finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(map, marker);
                });

                //oms.addListener('click', function (marker,event) {
                //    infowindow.open(map, marker);
                //});

                oms.addListener('spiderfy', function (markers) {
                    infowindow.close();
                })

                oms.addMarker(marker);
            });
    }

        </script>
    </section>
}